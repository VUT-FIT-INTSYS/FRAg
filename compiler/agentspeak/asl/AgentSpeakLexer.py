# Generated from AgentSpeak.g4 by ANTLR 4.9
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2+")
        buf.write("\u0141\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3")
        buf.write("\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3")
        buf.write("\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3")
        buf.write("\22\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27")
        buf.write("\3\27\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#")
        buf.write("\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\7$\u00c0\n")
        buf.write("$\f$\16$\u00c3\13$\5$\u00c5\n$\3%\3%\7%\u00c9\n%\f%\16")
        buf.write("%\u00cc\13%\3%\7%\u00cf\n%\f%\16%\u00d2\13%\3%\3%\6%\u00d6")
        buf.write("\n%\r%\16%\u00d7\3%\3%\5%\u00dc\n%\3%\6%\u00df\n%\r%\16")
        buf.write("%\u00e0\5%\u00e3\n%\3%\6%\u00e6\n%\r%\16%\u00e7\3%\3%")
        buf.write("\5%\u00ec\n%\3%\6%\u00ef\n%\r%\16%\u00f0\5%\u00f3\n%\3")
        buf.write("&\3&\3&\5&\u00f8\n&\3&\3&\3&\3&\7&\u00fe\n&\f&\16&\u0101")
        buf.write("\13&\5&\u0103\n&\3\'\3\'\3(\3(\3)\3)\3*\3*\7*\u010d\n")
        buf.write("*\f*\16*\u0110\13*\3*\3*\3*\7*\u0115\n*\f*\16*\u0118\13")
        buf.write("*\3*\5*\u011b\n*\3+\6+\u011e\n+\r+\16+\u011f\3+\3+\3,")
        buf.write("\3,\3,\3,\7,\u0128\n,\f,\16,\u012b\13,\3,\5,\u012e\n,")
        buf.write("\3,\3,\3,\3,\3-\3-\3-\3-\7-\u0138\n-\f-\16-\u013b\13-")
        buf.write("\3-\3-\3-\3-\3-\4\u0129\u0139\2.\3\3\5\4\7\5\t\6\13\7")
        buf.write("\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21")
        buf.write("!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'M\2O\2Q\2S(U)W*Y+\3\2\n\4")
        buf.write("\2GGgg\4\2--//\3\2c|\3\2C\\\3\2\62;\3\2$$\3\2))\5\2\13")
        buf.write("\f\17\17\"\"\2\u015b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2")
        buf.write("\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2")
        buf.write("\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31")
        buf.write("\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2")
        buf.write("\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3")
        buf.write("\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2")
        buf.write("\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3")
        buf.write("\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G")
        buf.write("\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2")
        buf.write("W\3\2\2\2\2Y\3\2\2\2\3[\3\2\2\2\5]\3\2\2\2\7`\3\2\2\2")
        buf.write("\tb\3\2\2\2\13d\3\2\2\2\rf\3\2\2\2\17i\3\2\2\2\21k\3\2")
        buf.write("\2\2\23m\3\2\2\2\25o\3\2\2\2\27q\3\2\2\2\31u\3\2\2\2\33")
        buf.write("w\3\2\2\2\35y\3\2\2\2\37{\3\2\2\2!}\3\2\2\2#\177\3\2\2")
        buf.write("\2%\u0082\3\2\2\2\'\u0085\3\2\2\2)\u0087\3\2\2\2+\u0089")
        buf.write("\3\2\2\2-\u008b\3\2\2\2/\u008d\3\2\2\2\61\u0090\3\2\2")
        buf.write("\2\63\u0092\3\2\2\2\65\u0095\3\2\2\2\67\u0098\3\2\2\2")
        buf.write("9\u009c\3\2\2\2;\u009e\3\2\2\2=\u00a2\3\2\2\2?\u00a4\3")
        buf.write("\2\2\2A\u00a7\3\2\2\2C\u00a9\3\2\2\2E\u00ad\3\2\2\2G\u00c4")
        buf.write("\3\2\2\2I\u00f2\3\2\2\2K\u0102\3\2\2\2M\u0104\3\2\2\2")
        buf.write("O\u0106\3\2\2\2Q\u0108\3\2\2\2S\u011a\3\2\2\2U\u011d\3")
        buf.write("\2\2\2W\u0123\3\2\2\2Y\u0133\3\2\2\2[\\\7\60\2\2\\\4\3")
        buf.write("\2\2\2]^\7<\2\2^_\7/\2\2_\6\3\2\2\2`a\7#\2\2a\b\3\2\2")
        buf.write("\2bc\7B\2\2c\n\3\2\2\2de\7<\2\2e\f\3\2\2\2fg\7>\2\2gh")
        buf.write("\7/\2\2h\16\3\2\2\2ij\7-\2\2j\20\3\2\2\2kl\7/\2\2l\22")
        buf.write("\3\2\2\2mn\7A\2\2n\24\3\2\2\2op\7\u0080\2\2p\26\3\2\2")
        buf.write("\2qr\7p\2\2rs\7q\2\2st\7v\2\2t\30\3\2\2\2uv\7(\2\2v\32")
        buf.write("\3\2\2\2wx\7~\2\2x\34\3\2\2\2yz\7*\2\2z\36\3\2\2\2{|\7")
        buf.write("+\2\2| \3\2\2\2}~\7=\2\2~\"\3\2\2\2\177\u0080\7#\2\2\u0080")
        buf.write("\u0081\7#\2\2\u0081$\3\2\2\2\u0082\u0083\7/\2\2\u0083")
        buf.write("\u0084\7-\2\2\u0084&\3\2\2\2\u0085\u0086\7]\2\2\u0086")
        buf.write("(\3\2\2\2\u0087\u0088\7_\2\2\u0088*\3\2\2\2\u0089\u008a")
        buf.write("\7.\2\2\u008a,\3\2\2\2\u008b\u008c\7>\2\2\u008c.\3\2\2")
        buf.write("\2\u008d\u008e\7>\2\2\u008e\u008f\7?\2\2\u008f\60\3\2")
        buf.write("\2\2\u0090\u0091\7@\2\2\u0091\62\3\2\2\2\u0092\u0093\7")
        buf.write("@\2\2\u0093\u0094\7?\2\2\u0094\64\3\2\2\2\u0095\u0096")
        buf.write("\7?\2\2\u0096\u0097\7?\2\2\u0097\66\3\2\2\2\u0098\u0099")
        buf.write("\7^\2\2\u0099\u009a\7?\2\2\u009a\u009b\7?\2\2\u009b8\3")
        buf.write("\2\2\2\u009c\u009d\7?\2\2\u009d:\3\2\2\2\u009e\u009f\7")
        buf.write("?\2\2\u009f\u00a0\7\60\2\2\u00a0\u00a1\7\60\2\2\u00a1")
        buf.write("<\3\2\2\2\u00a2\u00a3\7,\2\2\u00a3>\3\2\2\2\u00a4\u00a5")
        buf.write("\7,\2\2\u00a5\u00a6\7,\2\2\u00a6@\3\2\2\2\u00a7\u00a8")
        buf.write("\7\61\2\2\u00a8B\3\2\2\2\u00a9\u00aa\7f\2\2\u00aa\u00ab")
        buf.write("\7k\2\2\u00ab\u00ac\7x\2\2\u00acD\3\2\2\2\u00ad\u00ae")
        buf.write("\7o\2\2\u00ae\u00af\7q\2\2\u00af\u00b0\7f\2\2\u00b0F\3")
        buf.write("\2\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3\7t\2\2\u00b3\u00b4")
        buf.write("\7w\2\2\u00b4\u00c5\7g\2\2\u00b5\u00b6\7h\2\2\u00b6\u00b7")
        buf.write("\7c\2\2\u00b7\u00b8\7n\2\2\u00b8\u00b9\7u\2\2\u00b9\u00c5")
        buf.write("\7g\2\2\u00ba\u00c1\5M\'\2\u00bb\u00c0\5M\'\2\u00bc\u00c0")
        buf.write("\5O(\2\u00bd\u00c0\5Q)\2\u00be\u00c0\7a\2\2\u00bf\u00bb")
        buf.write("\3\2\2\2\u00bf\u00bc\3\2\2\2\u00bf\u00bd\3\2\2\2\u00bf")
        buf.write("\u00be\3\2\2\2\u00c0\u00c3\3\2\2\2\u00c1\u00bf\3\2\2\2")
        buf.write("\u00c1\u00c2\3\2\2\2\u00c2\u00c5\3\2\2\2\u00c3\u00c1\3")
        buf.write("\2\2\2\u00c4\u00b1\3\2\2\2\u00c4\u00b5\3\2\2\2\u00c4\u00ba")
        buf.write("\3\2\2\2\u00c5H\3\2\2\2\u00c6\u00ca\5Q)\2\u00c7\u00c9")
        buf.write("\5Q)\2\u00c8\u00c7\3\2\2\2\u00c9\u00cc\3\2\2\2\u00ca\u00c8")
        buf.write("\3\2\2\2\u00ca\u00cb\3\2\2\2\u00cb\u00f3\3\2\2\2\u00cc")
        buf.write("\u00ca\3\2\2\2\u00cd\u00cf\5Q)\2\u00ce\u00cd\3\2\2\2\u00cf")
        buf.write("\u00d2\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d0\u00d1\3\2\2\2")
        buf.write("\u00d1\u00d3\3\2\2\2\u00d2\u00d0\3\2\2\2\u00d3\u00d5\7")
        buf.write("\60\2\2\u00d4\u00d6\5Q)\2\u00d5\u00d4\3\2\2\2\u00d6\u00d7")
        buf.write("\3\2\2\2\u00d7\u00d5\3\2\2\2\u00d7\u00d8\3\2\2\2\u00d8")
        buf.write("\u00e2\3\2\2\2\u00d9\u00db\t\2\2\2\u00da\u00dc\t\3\2\2")
        buf.write("\u00db\u00da\3\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00de\3")
        buf.write("\2\2\2\u00dd\u00df\5Q)\2\u00de\u00dd\3\2\2\2\u00df\u00e0")
        buf.write("\3\2\2\2\u00e0\u00de\3\2\2\2\u00e0\u00e1\3\2\2\2\u00e1")
        buf.write("\u00e3\3\2\2\2\u00e2\u00d9\3\2\2\2\u00e2\u00e3\3\2\2\2")
        buf.write("\u00e3\u00f3\3\2\2\2\u00e4\u00e6\5Q)\2\u00e5\u00e4\3\2")
        buf.write("\2\2\u00e6\u00e7\3\2\2\2\u00e7\u00e5\3\2\2\2\u00e7\u00e8")
        buf.write("\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e9\u00eb\t\2\2\2\u00ea")
        buf.write("\u00ec\t\3\2\2\u00eb\u00ea\3\2\2\2\u00eb\u00ec\3\2\2\2")
        buf.write("\u00ec\u00ee\3\2\2\2\u00ed\u00ef\5Q)\2\u00ee\u00ed\3\2")
        buf.write("\2\2\u00ef\u00f0\3\2\2\2\u00f0\u00ee\3\2\2\2\u00f0\u00f1")
        buf.write("\3\2\2\2\u00f1\u00f3\3\2\2\2\u00f2\u00c6\3\2\2\2\u00f2")
        buf.write("\u00d0\3\2\2\2\u00f2\u00e5\3\2\2\2\u00f3J\3\2\2\2\u00f4")
        buf.write("\u0103\7a\2\2\u00f5\u00f8\5O(\2\u00f6\u00f8\5M\'\2\u00f7")
        buf.write("\u00f5\3\2\2\2\u00f7\u00f6\3\2\2\2\u00f8\u00ff\3\2\2\2")
        buf.write("\u00f9\u00fe\5M\'\2\u00fa\u00fe\5O(\2\u00fb\u00fe\5Q)")
        buf.write("\2\u00fc\u00fe\7a\2\2\u00fd\u00f9\3\2\2\2\u00fd\u00fa")
        buf.write("\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fd\u00fc\3\2\2\2\u00fe")
        buf.write("\u0101\3\2\2\2\u00ff\u00fd\3\2\2\2\u00ff\u0100\3\2\2\2")
        buf.write("\u0100\u0103\3\2\2\2\u0101\u00ff\3\2\2\2\u0102\u00f4\3")
        buf.write("\2\2\2\u0102\u00f7\3\2\2\2\u0103L\3\2\2\2\u0104\u0105")
        buf.write("\t\4\2\2\u0105N\3\2\2\2\u0106\u0107\t\5\2\2\u0107P\3\2")
        buf.write("\2\2\u0108\u0109\t\6\2\2\u0109R\3\2\2\2\u010a\u010e\7")
        buf.write("$\2\2\u010b\u010d\n\7\2\2\u010c\u010b\3\2\2\2\u010d\u0110")
        buf.write("\3\2\2\2\u010e\u010c\3\2\2\2\u010e\u010f\3\2\2\2\u010f")
        buf.write("\u0111\3\2\2\2\u0110\u010e\3\2\2\2\u0111\u011b\7$\2\2")
        buf.write("\u0112\u0116\7)\2\2\u0113\u0115\n\b\2\2\u0114\u0113\3")
        buf.write("\2\2\2\u0115\u0118\3\2\2\2\u0116\u0114\3\2\2\2\u0116\u0117")
        buf.write("\3\2\2\2\u0117\u0119\3\2\2\2\u0118\u0116\3\2\2\2\u0119")
        buf.write("\u011b\7)\2\2\u011a\u010a\3\2\2\2\u011a\u0112\3\2\2\2")
        buf.write("\u011bT\3\2\2\2\u011c\u011e\t\t\2\2\u011d\u011c\3\2\2")
        buf.write("\2\u011e\u011f\3\2\2\2\u011f\u011d\3\2\2\2\u011f\u0120")
        buf.write("\3\2\2\2\u0120\u0121\3\2\2\2\u0121\u0122\b+\2\2\u0122")
        buf.write("V\3\2\2\2\u0123\u0124\7\61\2\2\u0124\u0125\7\61\2\2\u0125")
        buf.write("\u0129\3\2\2\2\u0126\u0128\13\2\2\2\u0127\u0126\3\2\2")
        buf.write("\2\u0128\u012b\3\2\2\2\u0129\u012a\3\2\2\2\u0129\u0127")
        buf.write("\3\2\2\2\u012a\u012d\3\2\2\2\u012b\u0129\3\2\2\2\u012c")
        buf.write("\u012e\7\17\2\2\u012d\u012c\3\2\2\2\u012d\u012e\3\2\2")
        buf.write("\2\u012e\u012f\3\2\2\2\u012f\u0130\7\f\2\2\u0130\u0131")
        buf.write("\3\2\2\2\u0131\u0132\b,\2\2\u0132X\3\2\2\2\u0133\u0134")
        buf.write("\7\61\2\2\u0134\u0135\7,\2\2\u0135\u0139\3\2\2\2\u0136")
        buf.write("\u0138\13\2\2\2\u0137\u0136\3\2\2\2\u0138\u013b\3\2\2")
        buf.write("\2\u0139\u013a\3\2\2\2\u0139\u0137\3\2\2\2\u013a\u013c")
        buf.write("\3\2\2\2\u013b\u0139\3\2\2\2\u013c\u013d\7,\2\2\u013d")
        buf.write("\u013e\7\61\2\2\u013e\u013f\3\2\2\2\u013f\u0140\b-\2\2")
        buf.write("\u0140Z\3\2\2\2\33\2\u00bf\u00c1\u00c4\u00ca\u00d0\u00d7")
        buf.write("\u00db\u00e0\u00e2\u00e7\u00eb\u00f0\u00f2\u00f7\u00fd")
        buf.write("\u00ff\u0102\u010e\u0116\u011a\u011f\u0129\u012d\u0139")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class AgentSpeakLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    ATOM = 35
    NUMBER = 36
    VAR = 37
    STRING = 38
    WS = 39
    LC = 40
    BC = 41

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "':-'", "'!'", "'@'", "':'", "'<-'", "'+'", "'-'", "'?'", 
            "'~'", "'not'", "'&'", "'|'", "'('", "')'", "';'", "'!!'", "'-+'", 
            "'['", "']'", "','", "'<'", "'<='", "'>'", "'>='", "'=='", "'\\=='", 
            "'='", "'=..'", "'*'", "'**'", "'/'", "'div'", "'mod'" ]

    symbolicNames = [ "<INVALID>",
            "ATOM", "NUMBER", "VAR", "STRING", "WS", "LC", "BC" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "ATOM", "NUMBER", "VAR", "LC_LETTER", 
                  "UP_LETTER", "DIGIT", "STRING", "WS", "LC", "BC" ]

    grammarFileName = "AgentSpeak.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


